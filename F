
Stack Overflow на русском
регистрация войти
Используя наш сайт, вы подтверждаете, что прочитали и поняли политику о куки, политику конфиденциальности и пользовательское соглашение.

Вопросы Метки Участники Знаки Задать вопрос
голос «за»
4
голос «‎против»
избранное
С++. Решение квадратного уравнения
c++ инспекция-кода
Написал программу для вычисления корней квадратного уравнения. Сам, можно сказать, новичок в программировании, и хотелось бы узнать мнение тех кто имеет опыт в программировании. Насколько код ниже соответствует современным требованиям? Какие основные ошибки и замечания можно сделать к нему? Огромное спасибо всем! Приму и учту любую критику.

#include <C:\Users\leavemealone\Desktop\cpp_1\source\here_code\std_lib_facilities.h>

using namespace std;

double first_koef = 0, sec_koef = 0, third_koef = 0;// коэфициенты квадратного уравнения
double discriminant = 0;
double result_1 = 0, result_2 = 0;
double func_discr(double a, double b, double c); // прототип функции

int main() {
    cout << "Write x1, x2, x3 please" << endl;
    try {//начало try
        if(cin >> first_koef){}//если всё ОК - ничего не делаем
        else {
            throw 1; // выбрасываем исключение      
        }
        if(cin >> sec_koef){}//аналогично
        else {
            throw 1; 
        }
        if(cin >> third_koef){}//аналогично
        else {
            throw 1; 
        }
        func_discr(first_koef, sec_koef, third_koef); // функция подсчёта дискриминанта
        result_1 = (-sec_koef + sqrt(discriminant)) / 2*first_koef;//первый корень уравнения
        result_2 = (-sec_koef - sqrt(discriminant)) / 2*first_koef;//второй корень уравнения

        if(result_1 == result_2) {//если результаты одинаковые - выводим один
            cout << "X = " << result_1 << endl;
            _getch();
        }else{//если нет, оба результаты
        cout << "X1 = " << result_1 << "\tX2 = " << result_2 << endl;
        _getch();
        }
    return 0;   
}//end of try
catch(int i) {
    cout << "ERROR in koef! Press any key to exit" << endl;
        _getch();
        return 1;
}//end of catch
}//end of main

//Вычисление дискриминанта.
double func_discr(double a, double b, double c) {
    try {
        discriminant = b*b - 4*a*c;
        if(discriminant < 0) {
            throw 2;
        }else {         
            return discriminant;
        }
    }
    catch(int i) {
    cout << "CRITICAL ERROR! D < 0!" << endl;
    _getch();
    }

}
